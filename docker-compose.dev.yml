version: '3.8'
services:
  redis:
    image: 'redis:alpine'
    container_name: 'redis'
    command: ['redis-server', '--bind', 'redis', '--port', '6379']
    ports:
      - 6379:6379
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - backend

  mosquitto:
    image: 'eclipse-mosquitto'
    container_name: 'mosquitto'
    ports:
      - 1883:1883
    networks:
      - backend
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
  server-api:
    tty: true
    container_name: 'server-api'
    command: npm run start:dev
    env_file:
      - .env
    build:
      context: ./server-api
      dockerfile: Dockerfile
    ports:
      - $PORT_API:$PORT_API
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./server-api/src:/server/src
      - ./server-api/bin:/server/bin
    networks:
      - backend

  server-device:
    tty: true
    container_name: 'server-device'
    command: npm run start:dev
    depends_on:
      - redis
      - server-api
      - mosquitto
    env_file:
      - .env
    build:
      context: ./server-device
      dockerfile: Dockerfile
    ports:
      - $PORT_DEVICE:$PORT_DEVICE
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./server-device/src:/server/src
    networks:
      - backend

  server-client:
    tty: true
    container_name: 'server-client'
    command: npm run start:dev
    depends_on:
      - redis
      - mosquitto
      - server-device
      - server-api
    env_file:
      - .env
    build:
      context: ./server-client
      dockerfile: Dockerfile
    ports:
      - $PORT_CLIENT:$PORT_CLIENT
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./server-client/src:/server/src
    networks:
      - backend

networks:
  backend:
