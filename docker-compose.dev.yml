version: '3.8'
services:
  emqx:
    image: 'emqx/emqx'
    container_name: 'emqx'
    environment:
      - EMQX_NAME=emqx
      # - EMQX_LOG__LEVEL=debug
      - EMQX_ALLOW_ANONYMOUS=false

      - EMQX_LOADED_PLUGINS=emqx_auth_http,emqx_management,emqx_recon,emqx_retainer,emqx_dashboard
    ports:
      - 1883:1883 # MQTT
      - 8083:8083
      - 8883:8883
      - 8084:8084
      - 18083:18083
    volumes:
      - ./emqx/plugins:/opt/emqx/etc/plugins
    networks:
      - backend

  api:
    tty: true
    container_name: 'api'
    command: npm run start:dev
    env_file:
      - .env
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - $PORT_API:$PORT_API
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./api/src:/server/src
    networks:
      - backend

  auth:
    tty: true
    container_name: 'auth'
    command: npm run start:dev
    env_file:
      - .env
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - $PORT_AUTH:$PORT_AUTH
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./auth/src:/server/src
    networks:
      - backend

  ota:
    tty: true
    container_name: 'ota'
    command: npm run start:dev
    env_file:
      - .env
    build:
      context: ./ota
      dockerfile: Dockerfile
    ports:
      - $PORT_OTA:$PORT_OTA
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/server/firebaseConfig.json
      - ./ota/src:/server/src
    networks:
      - backend

networks:
  backend:
