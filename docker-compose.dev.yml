version: '3.8'
services:
  emqx:
    image: 'emqx/emqx'
    container_name: 'emqx'
    environment:
      - EMQX_NAME=emqx
      # - EMQX_LOG__LEVEL=debug
      - EMQX_ALLOW_ANONYMOUS=false

      - EMQX_LOADED_PLUGINS=emqx_auth_http,emqx_web_hook,emqx_management,emqx_recon,emqx_retainer,emqx_dashboard
    env_file:
      - .env
    ports:
      - 1883:1883 # MQTT
      - 8083:8083
      - 8883:8883
      - 8084:8084
      - 18083:18083
    volumes:
      - ./emqx/plugins:/opt/emqx/etc/plugins
    networks:
      - backend

  webhooks:
    tty: true
    container_name: 'webhooks'
    env_file:
      - .env
    build:
      context: ./webhooks
      dockerfile: Dockerfile
    ports:
      - $PORT_WEBHOOK:$PORT_WEBHOOK
    restart: 'unless-stopped'
    networks:
      - backend

  auth:
    tty: true
    container_name: 'auth'
    command: npm run start:dev
    env_file:
      - .env
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - $PORT_AUTH:$PORT_AUTH
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/app/firebaseConfig.json
      - ./auth/src:/app/src
    networks:
      - backend

  ota:
    tty: true
    container_name: 'ota'
    command: npm run start:dev
    env_file:
      - .env
    build:
      context: ./ota
      dockerfile: Dockerfile
    ports:
      - $PORT_OTA:$PORT_OTA
    restart: 'unless-stopped'
    volumes:
      - ./firebaseConfig.json:/app/firebaseConfig.json
      - ./ota/src:/app/src
    networks:
      - backend
  nginx:
    tty: true
    container_name: 'nginx'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    restart: 'unless-stopped'
    volumes:
      - ./certs:/etc/ssl/nginx/certs
    networks:
      - backend

networks:
  backend:
